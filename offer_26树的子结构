/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSubStructure(TreeNode* A, TreeNode* B) {
        if(B == nullptr || A == nullptr)
            return false;
        
        return isSameStruct(A, B) || isSubStructure(A->left, B) || isSubStructure(A->right, B);
    }
    
    bool isSameStruct(TreeNode* A, TreeNode* B)
    {
        if(B == nullptr)
            return true;
        if(A == nullptr)
            return false;
        if(A->val != B->val)
            return false;
        
        return isSameStruct(A->left, B->left) && isSameStruct(A->right, B->right);
    }
};
