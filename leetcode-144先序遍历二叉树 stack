/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> l;
        TreeNode* p = root;
        stack<TreeNode*> s;
        
        if(p == nullptr)
            return l;
        
        s.push(p);
        while(!s.empty())
        {
            while(p)
            {
                l.push_back(p->val);
                s.push(p);
                p = p->left; 
            }
            TreeNode* tmp = s.top();
            s.pop();
            p = tmp->right;
        }
        
        return l;
    }
};
