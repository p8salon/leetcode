/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    int maxDepth(Node* root) {
        if(root == nullptr)
            return 0;
        
        int maxdep = 0;
        stack<pair<Node*, int>> s_mp;
        s_mp.push(pair<Node*, int>(root,1));
        while(!s_mp.empty())
        {
            Node* tmp = s_mp.top().first;
            int dep = s_mp.top().second;
            s_mp.pop();
            for(Node* it : node->children)
                stack.push(pair<Node*, int>(it, dep+1));
            maxdep = max(maxdep, dep);
        }
        
        return maxdep;
    }
};
