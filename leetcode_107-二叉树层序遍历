/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        queue<TreeNode* > q;
        vector<vector<int> > ret;
        stack<vector<int> > s;
        
        if(root == nullptr)
            return ret;
        
        q.push(root);
        while(!q.empty())
        {
            int len = q.size();
            vector<int> tmp_v;
            while(len)
            {
                TreeNode* node = q.front();
                tmp_v.push_back(node->val);
            
                if(node->left)
                    q.push(node->left);
                if(node->right)
                    q.push(node->right);
            
                q.pop();
                len--;
            }
            s.push(tmp_v);
        }
        int size = s.size();
        for(int i=0; i<size; i++)
        {
            ret.push_back(s.top());
            s.pop();
        }
        return ret;
    }
};
